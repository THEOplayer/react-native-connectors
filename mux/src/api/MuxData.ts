export interface MuxData {
  /**
   * Your env key from the Mux dashboard. Note this was previously named property_key
   */
  env_key?: string;

  /**
   * You can use this field to separate views into different experiments, if you would like to filter by this
   * dimension later. This should be a string value, but your account is limited to a total of 10 unique experiment
   * names, so be sure that this value is not generated dynamically or randomly.
   */
  experiment_name?: string;

  /**
   * An ID representing the viewer who is watching the stream. Use this to look up video views for an individual viewer.
   * If no value is specified, a unique ID will be generated by the SDK. Note: You should not use any value that is
   * personally identifiable on its own (such as email address, username, etc). Instead, you should supply an
   * anonymized viewer ID which you have stored within your own system.
   */
  viewer_user_id?: string;

  /**
   * Your env key from the Mux dashboard.
   *
   * @deprecated Use env_key.
   */
  property_key?: string;

  /**
   * A sub property is an optional way to group data within a property. For example, sub properties may be used by a
   * video platform to group data by its own customers, or a media company might use them to distinguish between its
   * many websites.
   */
  sub_property_id?: string;

  /**
   *
   */
  ad_config_variant?: string;

  /**
   * Provide the context of the page for more specific analysis. Values include watchpage, iframe, or leave empty.
   * watchpage — A web page that is dedicated to playing a specific video (for example youtube.com/watch/ID or
   * hulu.com/watch/ID) iframe — An iframe specifically used to embed a player on different sites/pages.
   */
  page_type?: string;

  /**
   * You can provide a name for the player if you want to compare different configurations or types of players around
   * your site or application. This is different from the player software (e.g. Video.js), which is tracked
   * automatically by the SDK.
   */
  player_name?: string;

  /**
   * As you make changes to your player you can compare how new versions of your player perform. This is not the
   * player software version (e.g. THEOplayer 5.6.0), which is tracked automatically by the SDK.
   */
  player_version?: string;

  /**
   * If you are explicitly loading your player in page (perhaps as a response to a user interaction),
   * include the timestamp (milliseconds since Jan 1 1970) when you initialize the player (or for HTML5 video, when
   * right before you add the element to the DOM) in order to accurately track page load time and player startup time.
   */
  player_init_time?: number;

  /**
   * Your internal ID for the video.
   */
  video_id?: string;

  /**
   * The Content Delivery Network used to deliver the video. If using an SDK that supports CDN header extraction,
   * this value will be auto-populated.
   */
  video_cdn?: string;

  /**
   * The length of the video in milliseconds.
   */
  video_duration?: number;

  /**
   *
   */
  video_is_live?: boolean;

  /**
   *
   */
  video_experiments?: string;

  /**
   * The type of content: 'short', 'movie', 'episode', 'clip', 'trailer', or 'event'.
   */
  video_content_type?: string;

  /**
   * Allows you to compare different encoders or encoding settings. This could designate the encoder used
   * (e.g. x264, hevc, or av1), the preset used (e.g. 'av1-0', 'av1-4', or 'av1-8'), or other properties of the
   * encoding you want to track.
   */
  video_encoding_variant?: string;

  /**
   * The audio language of the video, assuming it's unchangeable after playing.
   */
  video_language_code?: string;

  /**
   * The producer of the video title.
   */
  video_producer?: string;

  /**
   * The series of the video (e.g.: 'Season 1').
   */
  video_series?: string;

  /**
   *
   */
  video_source_url?: string;

  /**
   * The type of video stream (e.g: 'live' or 'on-demand').
   */
  video_stream_type?: string;

  /**
   * Title of the video player (e.g.: 'Awesome Show: Pilot').
   */
  video_title?: string;

  /**
   * Your internal ID for a video variant.
   */
  video_variant_id?: string;

  /**
   * Allows you to monitor issues with the files of specific versions of the content, for example different audio
   * translations or versions with hard-coded/burned-in subtitles.
   */
  video_variant_name?: string;

  /**
   * An ID that can be used to correlate the view with platform services upstream such as CDN or origin logs.
   */
  view_session_id?: string;

  /**
   * The DRM SDK or service that is used for the video playback, such as 'widevine' or 'playready'.
   */
  view_drm_type?: string;

  /**
   *
   */
  viewer_application_name?: string;

  /**
   * Customer-defined metadata.
   */
  custom_1?: string;

  /**
   * Customer-defined metadata.
   */
  custom_2?: string;

  /**
   * Customer-defined metadata.
   */
  custom_3?: string;

  /**
   * Customer-defined metadata.
   */
  custom_4?: string;

  /**
   * Customer-defined metadata.
   */
  custom_5?: string;
}
