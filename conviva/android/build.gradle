buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") :
    project.properties["THEOplayerConviva_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.2"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def safeExtGet(prop, fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
  compileSdkVersion safeExtGet("THEOplayerConviva_compileSdkVersion", 33)

  defaultConfig {
    minSdkVersion safeExtGet("THEOplayerConviva_minSdkVersion", 21)
    targetSdkVersion safeExtGet("THEOplayerConviva_targetSdkVersion", 33)
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
    versionCode 1
    versionName "1.0"
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

rootProject.allprojects {
  repositories {
    // Any project depending on this module through npm should be able to find the local Maven repo.
    maven { url("$rootDir/../node_modules/@theoplayer/react-native-analytics-conviva/android/local") }
  }
}

repositories {
  mavenLocal()
  google()
  mavenCentral()
  // Local Maven repo
  maven { url("local") }
  maven { url 'https://jitpack.io' }
}

// The Conviva connector requires at least THEOplayer SDK v5.11.0.
def theoplayer_sdk_version = safeExtGet('THEOplayer_sdk', '[5.11, 7.0[')
def kotlin_version = safeExtGet("THEOplayerConviva_kotlinVersion", "1.9.10")
def conviva_version = safeExtGet('THEOplayerConviva_convivaVersion', '4.0.35')

// By default, take the connector version that aligns with the THEOplayer SDK version.
def theoplayer_conviva_connector_version = safeExtGet('THEOplayerConviva_connectorVersion', theoplayer_sdk_version)

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  implementation "com.conviva.sdk:conviva-core-sdk:$conviva_version"
  implementation "com.theoplayer.android-connector:conviva:$theoplayer_sdk_version"

  implementation "com.theoplayer.theoplayer-sdk-android:core:$theoplayer_sdk_version"
  implementation "com.theoplayer.theoplayer-sdk-android:integration-ads:$theoplayer_sdk_version"
  implementation "com.theoplayer.theoplayer-sdk-android:integration-ads-ima:$theoplayer_sdk_version"
  implementation project(':react-native-theoplayer')

  // Align the Kotlin SDK libraries with the same version.
  implementation(platform("org.jetbrains.kotlin:kotlin-bom:$kotlin_version"))
}
