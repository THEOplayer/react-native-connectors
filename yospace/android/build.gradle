buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion")  : "1.9.10"

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.2"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def safeExtGet(prop, fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
  compileSdkVersion safeExtGet("THEOplayerYospace_compileSdkVersion", 34)

  defaultConfig {
    minSdkVersion safeExtGet("THEOplayerYospace_minSdkVersion", 21)
    targetSdkVersion safeExtGet("THEOplayerYospace_targetSdkVersion", 34)
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
    versionCode 1
    versionName "1.0"
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

rootProject.allprojects {
  repositories {
    // Any project depending on this module through npm should be able to find the local Maven repo.
    maven { url("$rootDir/../node_modules/@theoplayer/react-native-yospace/android/local") }
    maven { url 'https://maven.theoplayer.com/releases' }
    maven {
      url 'https://yospacerepo.jfrog.io/yospacerepo/android-sdk'
      credentials {
        // Get credentials either from project properties, or from environment variables.
        username safeExtGet('YOSPACE_USERNAME', System.getenv("YOSPACE_USERNAME"))
        password safeExtGet('YOSPACE_PASSWORD', System.getenv("YOSPACE_PASSWORD"))
      }
    }
  }
}

repositories {
  mavenLocal()
  google()
  mavenCentral()
}

// The Yospace connector requires at least THEOplayer SDK v7.6.0.
def theoplayer_sdk_version = safeExtGet('THEOplayer_sdk', '[7.6.0, 8.0.0)')
def kotlin_version = safeExtGet("THEOplayerYospace_kotlinVersion", "1.9.10")
def yospace_version = safeExtGet('yospaceVersion', '3.6.7')

// By default, take the connector version that aligns with the THEOplayer SDK version.
def theoplayer_yospace_connector_version = safeExtGet('THEOplayerYospace_connectorVersion', theoplayer_sdk_version)

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "com.theoplayer.android-connector:yospace:$theoplayer_sdk_version"
  implementation("com.yospace:admanagement-sdk") {
    version {
      strictly("[3.6, 4.0)")
      prefer(yospace_version)
    }
  }

  compileOnly "com.theoplayer.theoplayer-sdk-android:core:$theoplayer_sdk_version"
  compileOnly "com.theoplayer.theoplayer-sdk-android:integration-ads:$theoplayer_sdk_version"
  compileOnly "com.theoplayer.theoplayer-sdk-android:integration-ads-ima:$theoplayer_sdk_version"
  compileOnly project(':react-native-theoplayer')

  // Align the Kotlin SDK libraries with the same version.
  implementation(platform("org.jetbrains.kotlin:kotlin-bom:$kotlin_version"))
}
