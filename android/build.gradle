buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["TheoplayerConviva_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.2"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["TheoplayerConviva_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["TheoplayerConviva_" + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }
  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

}

def test = new File(rootProject.projectDir, '../node_modules/react-native-theoplayer/android')
println(test.exists())

repositories {
  exclusiveContent {
    // We get React Native's Android binaries exclusively through npm,
    // from a local Maven repo inside node_modules/react-native/.
    // (The use of exclusiveContent prevents looking elsewhere like Maven Central
    // and potentially getting a wrong version.)
    filter {
      includeGroup "com.facebook.react"
    }
    forRepository {
      maven {
        // NOTE: if you are in a monorepo, you may have "$rootDir/../../../node_modules/react-native/android"
        url "$rootDir/../node_modules/react-native/android"
      }
    }
  }

  mavenLocal()
  maven {
    // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
    url("$rootDir/../node_modules/react-native/android")
  }
  maven {
    // Android JSC is installed from npm
    url("$rootDir/../node_modules/jsc-android/dist")
  }
  google()
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

def kotlin_version = getExtOrDefault("kotlinVersion")
def theoplayer_version = getExtOrDefault("THEOplayer_sdk")
def conviva_version = getExtOrDefault("conviva_sdk")

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:+"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "com.theoplayer.android-connector:conviva:$theoplayer_version"
  implementation "com.conviva.sdk:conviva-core-sdk:$conviva_version"

  compileOnly project(':reactnativetheoplayer')
}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "TheoplayerConviva"
    codegenJavaPackageName = "com.theoplayerconviva"
  }
}
